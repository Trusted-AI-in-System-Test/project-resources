[
  {
    "title": "ekf2: reinit baro height on sensor or calibration change",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/20818",
    "body": " - handle reset on delayed time horizon\r\n - avoid unnecessary preflight failures due to initial primary baro change (eg external DroneCAN barometer starting later than internal)\r\n\r\nhttps://review.px4.io/plot_app?log=0afe68b4-721d-4827-bf18-57c8f267592d\r\n![Screenshot from 2022-12-21 17-19-25](https://user-images.githubusercontent.com/84712/209013340-60b324c5-f6e1-4b36-8bc8-920140f2d747.png)\r\n\r\n![Screenshot from 2022-12-21 17-20-40](https://user-images.githubusercontent.com/84712/209013494-fd681f7d-af88-458f-927c-49dd50fc9ac7.png)\r\n\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/20818",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/20818",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/20818.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/20818.patch",
      "merged_at": "2022-12-29T21:37:34Z"
    }
  },
  {
    "title": "Fix invalid offboard setpoints for fw pos control",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/20669",
    "body": "### Solved Problem\r\nThis commit fixes a regression that caused problems when trying to use offboard control with fixedwings (or VTOLs in fixedwing mode)\r\n\r\nThe problem was that all offboard setpoints were considered invalid in offboard mode:\r\n![image](https://user-images.githubusercontent.com/5248102/203829851-55e1195d-9498-44be-aa6e-1e67db5f7ae5.png)\r\n![image](https://user-images.githubusercontent.com/5248102/203829872-ccfb20a0-c004-4592-bbfe-f7160d51c7bd.png)\r\n\r\n### Solution\r\nThis was a regression introduced by https://github.com/PX4/PX4-Autopilot/pull/19942, where the valid flag in position_setpoint_triplet was no longer being used and the offboard logic was left out.\r\n\r\n### Test coverage\r\nTested in SITL Gazebo and publishing offboard setpoints\r\n- Flight logs before PR: https://review.px4.io/plot_app?log=b46b490c-69f8-4fe1-a47f-b16fc6ab8b54\r\n- Flight logs after PR: https://review.px4.io/plot_app?log=ced912ac-1b8d-427e-8829-90337d208482\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/20669",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/20669",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/20669.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/20669.patch",
      "merged_at": "2022-11-30T08:14:58Z"
    }
  },
  {
    "title": "Navigator: fix init of _mission_item, plus add guards for using mision_item.loiter_radius",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/20464",
    "body": "\r\n## Describe problem solved by this pull request\r\nThis is to address what was reported here: https://github.com/PX4/PX4-Autopilot/pull/19928#issuecomment-1277934841\r\n\r\nWhat I think was going on:\r\n- RTL triggered a couple of times, and each time it was above the return altitude, so didnâ€™t have to climb. In the v1.13 RTL logic, as pointed out [here](https://github.com/PX4/PX4-Autopilot/pull/19928#issuecomment-1284454859), the mission_item.loiter_radius field wasn't filled, and it just kept using it as initialized. \r\n- The initialization happens in the constructor, and it initializes it to `_navigator->get_loiter_radius()`, which itself just gets the value of `_param_nav_loiter_rad`. At this moment, the params are though not yet fetched (happens [here](https://github.com/PX4/PX4-Autopilot/blob/c267cf71c3aa57fbbe544d02f3b25650f029384d/src/modules/navigator/navigator_main.cpp#L151))\r\n- in the [flight](https://review.px4.io/plot_app?log=4a466655-3c02-4f78-ab9e-1d90bca4b8e3) linked in the above mentioned issue , the initialisation value of it seems to have been 3.9e32, which was then passed through to the `position_setpoint_current.loiter_radius` (there is only a check for if(>0)), and the vehicle started on it's voyage around the solar system\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/26798987/197223431-d4a5a3c5-33ee-4655-8974-32d73cfc8abb.png)\r\n\r\n\r\n## Describe your solution\r\nOn current main we by accident fixed this particular issue already,[ as we explicitly set the loiter_radius](https://github.com/PX4/PX4-Autopilot/blob/ed558e199faab703ea3fb352db16512981fdb7ec/src/modules/navigator/rtl.cpp#L407) in every state of the RTL state machine. This wasn't the case in v1.13, but I guess we should back port it.\r\nAdditionally we should change the initialization of mission_item. I propose here to initialize to 0, which is considered as \"invalid\" before and not used in then (checks for ISFINITE and >FLT_EPS). \r\nI did the same for mission_item.acceptance_radius. \r\n\r\n## Describe possible alternatives\r\n- do we have a way to update the params before the constructor is called?\r\n- should we initialize `mission_item` fields consistently to NAN instead of some to NAN (currently yaw, lat, lon), and some to 0, and some not at all (e.g. altitude). And is this initialization in the constructor even needed?\r\n\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/20464",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/20464",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/20464.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/20464.patch",
      "merged_at": "2022-10-27T08:28:05Z"
    }
  },
  {
    "title": "Fix busy loop in gps module when using RTCM",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/19906",
    "body": "Please use [PX4 Discuss](http://discuss.px4.io/) or [Slack](http://slack.px4.io/) to align on pull requests if necessary. You can then open draft pull requests to get early feedback.\r\n\r\n## Describe problem solved by this pull request\r\nRTCM data message length was increased to 300 bytes without changing data type of integer holding the length.\r\nThis caused an overflow which lead to a busy loop in the gps driver.\r\n\r\n## Describe your solution\r\nUse a uint16.\r\n\r\n## Describe possible alternatives\r\nA clear and concise description of alternative solutions or features you've considered.\r\n\r\n## Test data / coverage\r\nHow was it tested? What cases were covered? Logs uploaded to https://review.px4.io/ and screenshots of the important plot parts.\r\n\r\n## Additional context\r\nAdd any other related context or media.\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/19906",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/19906",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/19906.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/19906.patch",
      "merged_at": "2022-07-13T05:49:47Z"
    }
  },
  {
    "title": "ekf: force fallback to baro if GPS is stopped while in GPS height mode",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/18458",
    "body": "Otherwise, no height aiding source is used.\r\n\r\nfixes https://px4.slack.com/archives/C0V533X4N/p1634539666104800\r\nlog with issue: https://review.px4.io/plot_app?log=56a6fb8b-b804-4a50-974b-3f88d04c2cbe",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/18458",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/18458",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/18458.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/18458.patch",
      "merged_at": "2021-10-26T08:05:29Z"
    }
  },
  {
    "title": "Fix srf05 driver.",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/18262",
    "body": "Please use [PX4 Discuss](http://discuss.px4.io/) or [Slack](http://slack.px4.io/) to align on pull requests if necessary. You can then open draft pull requests to get early feedback.\r\n\r\n**Describe problem solved by this pull request**\r\nA clear and concise description of the problem this proposed change will solve.\r\nE.g. For this use case I ran into...\r\n\r\n**Describe your solution**\r\nA clear and concise description of what you have implemented.\r\n\r\n**Describe possible alternatives**\r\nA clear and concise description of alternative solutions or features you've considered.\r\n\r\n**Test data / coverage**\r\nHow was it tested? What cases were covered? Logs uploaded to https://review.px4.io/ and screenshots of the important plot parts.\r\n\r\n**Additional context**\r\nAdd any other related context or media.\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/18262",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/18262",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/18262.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/18262.patch",
      "merged_at": "2021-10-19T01:00:59Z"
    }
  },
  {
    "title": "Fix bug in external Quadchute trigger (from PR 16691)",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/17695",
    "body": "Fixes a bug introduced with https://github.com/PX4/PX4-Autopilot/pull/16691. (@dagar @sfuhrer @RomanBapst )\r\n\r\n**Describe problem solved by this pull request**\r\nEli Vigdorchik ran into an undesired external quadchute during one of his test flights as reported on slack (https://px4.slack.com/archives/C39C4E709/p1622652580039900). Log here: https://review.px4.io/plot_app?log=26c65922-793b-4bad-88fa-86f58b97eb82 . For some reason Param2 of the command is set to 3, triggering the Quadchute instead of doing a normal back transition during RTL. I was able to reproduce in SITL on v1.12.0-beta and on master. I guess the issue is a badly initialized / old value of param2 floating around somewhere.\r\nhttps://logs.px4.io/plot_app?log=efaae0f0-a8a8-494c-b32d-6e041689836f\r\nhttps://logs.px4.io/plot_app?log=e177614d-a4c1-4ebf-97ca-6ed6fb8cf420\r\n\r\n**Describe your solution**\r\nExplicitly set Param2 to 0.0f in all occurrences where a normal BT is desired (I searched for all occurrences of *DO_VTOL_TRANSITION in the code).\r\n\r\nI also added a check on NANs. If param2 is a NAN, then _immediate_transition is false too.\r\n\r\n**Describe possible alternatives**\r\n- \r\n\r\n**Test data / coverage**\r\nSame procedure, i.e. Position mode flight with RTL triggered over QGC:\r\nhttps://logs.px4.io/plot_app?log=7cc61dad-7145-4e81-9ee3-f7c84dd04ef9\r\n\r\nI also tried manual transitions, transitions over QGC, missions with VTOL Land and normal Land items, `commander transition` and switching to Land mode via QGC. I couldn't provoke any external quadchutes. Did I miss another option to get into back transition?\r\n\r\n**Additional context**\r\nFollow up of https://github.com/PX4/PX4-Autopilot/pull/16691\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/17695",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/17695",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/17695.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/17695.patch",
      "merged_at": "2021-06-21T20:39:55Z"
    }
  },
  {
    "title": "flashparams: Fix a null-pointer dereference crash",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/17385",
    "body": "Fix a potential crash caused by calling erase_sector with a null\r\nsector_descriptor (current_sector == 0).\r\n\r\nSigned-off-by: Jukka Laitinen <jukkax@ssrc.tii.ae>\r\n\r\nPlease use [PX4 Discuss](http://discuss.px4.io/) or [Slack](http://slack.px4.io/) to align on pull requests if necessary. You can then open draft pull requests to get early feedback.\r\n\r\n**Describe problem solved by this pull request**\r\nA clear and concise description of the problem this proposed change will solve.\r\nE.g. For this use case I ran into...\r\n\r\n**Describe your solution**\r\nA clear and concise description of what you have implemented.\r\n\r\n**Describe possible alternatives**\r\nA clear and concise description of alternative solutions or features you've considered.\r\n\r\n**Test data / coverage**\r\nHow was it tested? What cases were covered? Logs uploaded to https://review.px4.io/ and screenshots of the important plot parts.\r\n\r\n**Additional context**\r\nAdd any other related context or media.\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/17385",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/17385",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/17385.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/17385.patch",
      "merged_at": "2021-04-14T14:55:34Z"
    }
  },
  {
    "title": "vtol_att_control: occasional tailsitter forward transition failure",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/17310",
    "body": "\r\nTailsitter VTOLs very occasionally gets stuck with zero roll and pitch angle in multicopter mode after\r\na forward transition command is issued.\r\n\r\nLog files with the transition failure:\r\nhttps://logs.px4.io/plot_app?log=d3c74285-5ae5-430d-a1bd-1b4e6de13938\r\nhttps://review.px4.io/plot_app?log=8d86e43c-5570-4480-9123-7e25669c5463\r\n\r\nIn the above logs you can see the pitch and roll sp set to zero during the forward transition. \r\n\r\nThis very rare behavior is triggered by the following events:\r\n1> a forward transition is triggered either in auto or manual mode.\r\n2> in the vtol_att_control main loop, if multicopter and fixed wing attitude setpoints are not updated, transition state is not updated\r\n3> the commander changes the vehicle status to transition mode.\r\n4> multicopter pos controller initiated  Transition flight task. This results in zero roll and pitch setpoint due to zero acceleration setpoint\r\n5> now vtol_att_control executes and updates the transition state. Specifically, _q_trans_start and _q_trans_sp are set with zero roll and pitch sp\r\n6> tilt is evaluated to be NaN, despite _q_trans_sp being normalized. This happens for 25% of all yaw angles when using float datatype. This can be\r\n   verified using the matrix library\r\n7> once tilt is evaluated to be NaN, _q_trans_sp is never updated again and is stuck in this state for ever.\r\n\r\nThis has been fixed by constraining the cos(tilt) within +1 to -1 range\r\nFurther, _q_trans_start and _q_trans_sp are immedietly initialized after a transition event is triggered.\r\n\r\n\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/17310",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/17310",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/17310.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/17310.patch",
      "merged_at": "2021-04-03T17:19:48Z"
    }
  },
  {
    "title": "Handle takeoff waypoints for rover",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/16297",
    "body": "**Describe problem solved by this pull request**\r\nPreviously, rover vehicles were not able to handle Takeoff waypoints. The behavior when a takeoff waypoint was passed to a rover vehicle was:\r\n- The vehicle would not move since the waypoint was too close\r\n- The takeoff waypoint would not get accepted since rovers are not able to climb and reach the altitude\r\n\r\nI think it might be obvious that one \"should not\" pass takeoff waypoints to a vehicle. However, QGroundControl only lets you plan a mission that starts with a takeoff waypoint. While this should also be an improvement on the QGC side, I think it is still useful to handle this case on the vehicle side so that the vehicle can still progress with the mission even with a takeoff waypoint\r\n\r\n**Describe your solution**\r\nThis adds a special case when handling takeoff waypoints for rover vehicles. The acceptance radius is set to only consider horizontal distance to the waypoint, if the vehicle type is rover.\r\n\r\n**Test data / coverage**\r\n- This was tested in SITL gazebo, with the rover model.\r\n```\r\nmake px4_sitl gazebo_rover\r\n```\r\nThis log shows a full mission successfully finished starting with a Takeoff waypoint and finished with a RTL: https://review.px4.io/plot_app?log=25fe983b-44d0-4a11-a7c2-2ab9662c35d4\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/16297",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/16297",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/16297.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/16297.patch",
      "merged_at": "2020-11-28T23:08:54Z"
    }
  },
  {
    "title": "Increase uavcan main stack size",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/15864",
    "body": "**Describe problem solved by this pull request**\r\nI observed hard faults when running `uavcan params list`. A stackcheck build showed that the `uavcan` task overflowed its stack.\r\n\r\n**Describe your solution**\r\nI increased the stack size for the `uavcan` command\r\n\r\n**Describe possible alternatives**\r\nNone\r\n\r\n**Test data / coverage**\r\nIncreasing stack size shouldn't cause any issues, but for what it's worth I have flown with this commit\r\nhttps://review.px4.io/plot_app?log=d0f658d7-60ab-40ae-b4e2-a32aae84d942\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/15864",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/15864",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/15864.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/15864.patch",
      "merged_at": "2020-10-02T05:31:28Z"
    }
  },
  {
    "title": "mc_pos_control: fix takeoff ramp gets amended by feed-forward",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/14821",
    "body": "**Describe problem solved by this pull request**\r\nI found an issue with the takeoff ramp when real world testing https://github.com/PX4/Firmware/pull/14749 on the Holybro QAV250. But I found the issue is independent of that pr.\r\n\r\nThe thrust doesn't ramp nicely anymore like it was designed but depending on stick input can go up and down unexpectedly during the ramp up. This can lead to early land detection if the thrust goes up high enough and then back down because the ramp is not yet high enough.\r\n\r\nThe problem is: Because the takeoff ramp is a vertical velocity limit ramp for the nice user experience but the acceleration feed-forward can add on top of the output and depending on trajectory generation result in unwanted thrust changes during the ramp.\r\n\r\n**Describe your solution**\r\nI suppress the vertical acceleration feed-forward during the ramp.\r\n\r\n**Test data / coverage**\r\nIt's reproducable in SITL with the correct configuration:\r\n`MPC_TKO_RAMP_T` 5, `MPC_JERK_MAX` 20\r\n1. Switch to position mode\r\n2. Arm\r\n3. Fully rise the throttle stick\r\n\r\nBefore: https://review.px4.io/plot_app?log=ba57f51e-abaf-4990-ad34-64b3cef56d11\r\n![image](https://user-images.githubusercontent.com/4668506/80960930-27657880-8e0a-11ea-854d-0b59169d5c9a.png)\r\nAfter: https://review.px4.io/plot_app?log=532b6cdd-5101-4007-82b6-529b1491e85b\r\n![image](https://user-images.githubusercontent.com/4668506/80960966-3a784880-8e0a-11ea-8318-54b2023b1d2d.png)\r\n\r\n",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/14821",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/14821",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/14821.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/14821.patch",
      "merged_at": "2020-05-04T14:10:37Z"
    }
  },
  {
    "title": "Navigator: RC loss yaw mission item",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/10291",
    "body": "Added yaw mission item to `rcloss` state in `navigator`. This fixes the issue mentioned #10262 where the vehicle yaws in a seemingly random direction when RC is lost.\n\n**Test data / coverage**\nCurrent behavior:\n![selection_001](https://user-images.githubusercontent.com/37091262/44412682-c3f8c180-a526-11e8-9941-05af1f521a36.png)\nProposed behavior with this PR:\n![selection_002](https://user-images.githubusercontent.com/37091262/44414401-ed1b5100-a52a-11e8-837a-d81ea6349acb.png)\nhttps://review.px4.io/plot_app?log=2e96b2de-f511-49c0-a51a-a34ba7cabc13",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/10291",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/10291",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/10291.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/10291.patch",
      "merged_at": "2018-08-21T19:05:56Z"
    }
  },
  {
    "title": "Navigator: Fix fixed-wing first order altitude hold",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/9850",
    "body": "**Issue**\r\nNavigator's fixed-wing first-order altitude hold (FOH) is currently causing altitude reference oscillations when in any LOITER mode. See screenshot below. Not only altitude, but also pitch and throttle can thus oscillate significantly. We observed this during a recent test flight.\r\n\r\n![image](https://user-images.githubusercontent.com/2565608/42387985-53c6343e-8144-11e8-86d2-a42aecc4c5c0.png)\r\n\r\n\r\nLog file from SITL where this can be seen: https://review.px4.io/plot_app?log=f18c45ab-622e-4b1d-9819-03cfb06af2b5 . Here, after t=3:20 the true altitude setpoint is still the same as before t=2:20 (i.e. 630m AMSL) but the FOH logic just wrongly sets it to 660m and adds slight oscillations on top. The exact amount of oscillations depends on waypoint distance, altitude difference etc, but i have seen altitude ref oscillations of up to 30m, resulting in full pitch up/down of the aircraft.\r\n\r\n**Analysis**\r\nSee the commit for the location of the code where this is happening. Essentially, every time that the loiter radius of any loiter WP is larger than the acceptance radius calculated from the L1 turn distance, then the Navigator FOH would _not_ consider the waypoint reached and would thus not stop modifying the current altitude setpoint. This leads to the oscillations or offsets in the altitude reference. \r\n\r\n**Solution**\r\nIf in any loiter mode, consider the loiter radius times a factor of 1.2 (same as for the waypoint_reached logic [here](https://github.com/PX4/Firmware/blob/master/src/modules/navigator/mission_block.cpp#L217) as the acceptance radius. Tested in SITL, which should be sufficient for this case.\r\n\r\n@acfloria @ryanjAA @antiheavy FYI\r\n@dagar Made this PR as a quick hotfix independently of your PR at https://github.com/PX4/Firmware/pull/8883/files which supposedly also fixes this but is much larger and where it is more uncertain when this would be merged.",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/9850",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/9850",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/9850.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/9850.patch",
      "merged_at": "2018-07-16T03:54:09Z"
    }
  },
  {
    "title": "commander: Fix pre-flight delta velocity bias check level",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/8446",
    "body": "Previous check level was less than the max achievable by the estimator using current default parameters making the check ineffective. \r\n\r\nRaised in response to log https://review.px4.io/plot_app?log=f619bcb1-7427-4619-86d6-bc53e5e2024e discussed in this issue: https://github.com/PX4/Firmware/issues/7202#issuecomment-300754802\r\n\r\nCurrent ekf2 internal prediction time step is 8 msec and the default value of EKF2_ABL_LIM is 0.4 m/s/s, so the maximum delta velocity bias estimate output by the EKFis will clip at 3.2E-3 m/s using current parameter defaults. The pre flight check level has been updated to 3/4 that value (an equivalent accel bias of 0.3 m/s/s",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/8446",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/8446",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/8446.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/8446.patch",
      "merged_at": "2017-12-12T00:41:43Z"
    }
  },
  {
    "title": "mc_pos_control: hotfix for possible thrust below minimum thrust setting",
    "html_url": "https://github.com/PX4/PX4-Autopilot/pull/6392",
    "body": "Hotfix after a crash because of a heavily negative desired thrust that got clipped to 0 by the mixer.\r\n0 thrust meant no more attitude tracking.\r\n\r\nFlight log that lead to these changes:\r\nhttp://review.px4.io/plot_app?log=90a3f19b-c8c2-44db-887f-0e6f5488aa84",
    "state": "closed",
    "pull_request": {
      "url": "https://api.github.com/repos/PX4/PX4-Autopilot/pulls/6392",
      "html_url": "https://github.com/PX4/PX4-Autopilot/pull/6392",
      "diff_url": "https://github.com/PX4/PX4-Autopilot/pull/6392.diff",
      "patch_url": "https://github.com/PX4/PX4-Autopilot/pull/6392.patch",
      "merged_at": "2017-01-19T17:05:59Z"
    }
  }
]